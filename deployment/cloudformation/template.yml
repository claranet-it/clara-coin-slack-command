AWSTemplateFormatVersion: 2010-09-09

Description: "This template deploys the CI/CD and related resources of the flowing-coin-slack-command project"

Parameters:
  ProjectName:
    Type: "String"
    Default: "flowing-coin-slack-command"

  ProjectNameShort:
    Type: "String"
    Default: "coin-slack"

  Stage:
    AllowedValues:
      - dev
      - stg
      - prod
    Description: "Stage"
    Type: "String"
    Default: "prod"

  GitHubRepository:
    Type: String
    Default: claranet/clara-coin-slack-command
    Description: owner/repository

  GitHubBranch:
    Description: "Branch"
    Type: "String"
    Default: "main"

  GitHubConnectionArn:
    Type: String
    Description: Arn of the GitHub connection created in the AWS Console (CodePipeline/Settings/Connections). If empty the connection is automatically created and must be finalized via the AWS Console.

Conditions:
  CreateGitHubConnection: !Equals
    - !Ref GitHubConnectionArn
    - ""

Resources:
  GitHubConnection:
    Type: AWS::CodeStarConnections::Connection
    Condition: CreateGitHubConnection
    Properties:
      ConnectionName: !Sub "${ProjectNameShort}-${Stage}-GithubConnection"
      ProviderType: GitHub

  SlackTokenParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/${ProjectName}/${Stage}/slack-token"
      Type: "String"
      Value: "Replace me in the console and change to secure string"
      Description: !Sub "Slack token for the ${ProjectName} service."

  IamRoleResourceIdParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/${ProjectName}/${Stage}/resource-id"
      Type: "String"
      Value: !Sub "${AWS::AccountId}"
      Description: !Sub "IAM role account ID for the ${ProjectName} service."

  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        !Join ["-", ["CodeBuildRole", !Ref "ProjectNameShort", !Ref "Stage"]]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            Service: "codebuild.amazonaws.com"
          Action: "sts:AssumeRole"

  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        !Join ["-", ["CodePipelineRole", !Ref "ProjectNameShort", !Ref "Stage"]]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            Service: "codepipeline.amazonaws.com"
          Action: "sts:AssumeRole"

  # This can be restricted more
  CodeBuildPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName:
        !Join ["-", ["CodeBuildPolicy", !Ref "ProjectNameShort", !Ref "Stage"]]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ssm:DescribeParameters
              - ssm:GetParameters
              - ssm:GetParameter
            Resource:
              - !Join [
                  "",
                  [
                    "arn:aws:ssm:",
                    !Ref AWS::Region,
                    ":",
                    !Ref AWS::AccountId,
                    ":parameter",
                    "/",
                    !Ref ProjectName,
                    "/",
                    !Ref Stage,
                    "/*",
                  ],
                ]

          - Effect: Allow
            Action:
              - s3:GetBucketAcl
              - s3:PutObject
              - s3:GetObject
              - s3:GetBucketLocation
              - s3:GetObjectVersion
            Resource:
              - !Join ["", ["arn:aws:s3:::", !Ref S3, "/*"]]
              - !Join ["", ["arn:aws:s3:::", !Ref S3]]

          - Effect: Allow
            Action:
              - s3:*
            Resource:
              - !Join ["", ["arn:aws:s3:::*", !Ref ProjectNameShort, "*/*"]]
              - !Join ["", ["arn:aws:s3:::*", !Ref ProjectNameShort, "*"]]

          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:DeleteLogGroup
              - logs:PutLogEvents
              - logs:TagResource
            Resource:
              - !Join [
                  "",
                  [
                    "arn:aws:logs:",
                    !Ref "AWS::Region",
                    ":",
                    !Ref "AWS::AccountId",
                    ":log-group:*",
                    !Ref ProjectNameShort,
                    "*",
                  ],
                ]

          - Effect: Allow
            Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutCodeCoverages
              - codebuild:BatchPutTestCases
            Resource: !GetAtt BuildDeploy.Arn

          - Effect: Allow
            Action:
              - lambda:Get*
              - lambda:List*
              - lambda:CreateFunction
              - lambda:DeleteFunction
              - lambda:CreateFunction
              - lambda:DeleteFunction
              - lambda:UpdateFunctionConfiguration
              - lambda:UpdateFunctionCode
              - lambda:PublishVersion
              - lambda:CreateAlias
              - lambda:DeleteAlias
              - lambda:UpdateAlias
              - lambda:AddPermission
              - lambda:RemovePermission
              - lambda:InvokeFunction
              - lambda:TagResource
            Resource:
              - !Join [
                  "",
                  [
                    "arn:aws:lambda:",
                    !Ref "AWS::Region",
                    ":",
                    !Ref "AWS::AccountId",
                    ":function:*",
                    !Ref ProjectName,
                    "*",
                  ],
                ]
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource:
              - !GetAtt CodeBuildRole.Arn
          - Effect: Allow
            Action:
              - iam:Get*
              - iam:List*
              - iam:PassRole
              - iam:CreateRole
              - iam:DeleteRole
              - iam:AttachRolePolicy
              - iam:DeleteRolePolicy
              - iam:PutRolePolicy
              - iam:TagRole
              - iam:UntagRole
            Resource:
              - !Sub "arn:aws:iam::${AWS::AccountId}:role/*${ProjectNameShort}*"
          - Effect: Allow
            Action:
              - dynamodb:CreateTable
              - dynamodb:CreateTableReplica
              - dynamodb:CreateGlobalTable
              - dynamodb:DeleteTable
              - dynamodb:DeleteGlobalTable
              - dynamodb:DeleteTableReplica
              - dynamodb:Describe*
              - dynamodb:List*
              - dynamodb:Get*
              - dynamodb:TagResource
              - dynamodb:UntagResource
              - dynamodb:UpdateContinuousBackups
              - dynamodb:UpdateGlobalTable
              - dynamodb:UpdateGlobalTableSettings
              - dynamodb:UpdateTable
              - dynamodb:UpdateTableReplicaAutoScaling
              - dynamodb:UpdateTimeToLive
            Resource:
              - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*coin*"
          - Effect: Allow
            Action:
              - cloudformation:CreateStack
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:DeleteStack
              - cloudformation:CreateChangeSet
              - cloudformation:ExecuteChangeSet
            Resource:
              - !Join [
                  "",
                  [
                    "arn:aws:cloudformation:",
                    !Ref "AWS::Region",
                    ":",
                    !Ref "AWS::AccountId",
                    ":stack/*",
                    !Ref ProjectName,
                    "*",
                  ],
                ]
          - Effect: Allow
            Action:
              - apigateway:GET
              - apigateway:POST
              - apigateway:PUT
              - apigateway:PATCH
              - apigateway:DELETE
              - apigateway:TagResource
            Resource:
              - !Sub "arn:aws:apigateway:${AWS::Region}::/*"
      Roles:
        - !Ref CodeBuildRole

  CodePipelinePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName:
        !Join [
          "-",
          ["CodePipelinePolicy", !Ref "ProjectNameShort", !Ref "Stage"],
        ]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObject
            Resource:
              - !Join ["", ["arn:aws:s3:::", !Ref S3, "/*"]]
          - Effect: Allow
            Action:
              - s3:ListBucket
            Resource:
              - !Join ["", ["arn:aws:s3:::", !Ref S3]]
          - Effect: Allow
            Action:
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
            Resource:
              - !GetAtt BuildDeploy.Arn
          - Effect: Allow
            Action:
              - codepipeline:PutJobSuccessResult
              - codepipeline:PutJobFailureResult
            Resource: "*"

          - Effect: Allow
            Action:
              - iam:PassRole
            Resource:
              - !GetAtt CodeBuildRole.Arn
          - Effect: Allow
            Action:
              - codestar-connections:GetConnection
              - codestar-connections:UseConnection
              - codestar-connections:ListConnections
              - codestar-connections:ListInstallationTargets
              - codestar-connections:GetInstallationUrl
              - codestar-connections:ListTagsForResource
            Resource:
              !If [
                CreateGitHubConnection,
                !Ref GitHubConnection,
                !Ref GitHubConnectionArn,
              ]
      Roles:
        - !Ref CodePipelineRole

  S3:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName:
        !Join [
          "-",
          [
            !Ref "AWS::AccountId",
            "artifacts",
            !Ref ProjectNameShort,
            !Ref "Stage",
            !Ref "AWS::Region",
          ],
        ]

  BuildDeploy:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Join ["-", ["deploy", !Ref "ProjectNameShort", !Ref "Stage"]]
      Description: Demo of CodeBuild with CodeDeploy pipeline.
      ServiceRole: !Ref CodeBuildRole
      TimeoutInMinutes: 5
      Source:
        Type: CODEPIPELINE
        BuildSpec: "deployspec.yml"
      Environment:
        Type: "LINUX_CONTAINER"
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: STAGE_NAME
            Type: PLAINTEXT
            Value: !Ref Stage
        Image: aws/codebuild/standard:7.0
      Artifacts:
        Type: CODEPIPELINE

  Pipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Join ["-", ["codepipeline", !Ref "ProjectNameShort", !Ref "Stage"]]
      PipelineType: V2
      ArtifactStore:
        Location: !Ref S3
        Type: S3
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        # Stage 1:  Get the source from GitHub:
        - Name: Source
          Actions:
            - Name: SourceAction
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                FullRepositoryId: !Ref GitHubRepository
                BranchName: !Ref GitHubBranch
                ConnectionArn:
                  !If [
                    CreateGitHubConnection,
                    !Ref GitHubConnection,
                    !Ref GitHubConnectionArn,
                  ]
              OutputArtifacts:
                - Name: sourcecode

        # Stage 2:  Build and Deploy using Serverless Framework
        - Name: BuildDeploy
          Actions:
            - Name: Build-Deploy
              RunOrder: 1
              InputArtifacts:
                - Name: sourcecode
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref BuildDeploy

Outputs:
  CodeBuild:
    Value: !Ref Pipeline
  Stage:
    Value: !Ref Stage
  Github:
    Value: !Ref GitHubRepository
  CodeBuildRole:
    Value: !Ref CodeBuildRole
  CodeBuildPolicy:
    Value: !Ref CodeBuildPolicy
  CodePipelineRole:
    Value: !Ref CodePipelineRole
  CodePipelinePolicy:
    Value: !Ref CodePipelinePolicy
  S3:
    Value: !Ref S3
